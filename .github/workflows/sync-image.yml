name: Sync Images to Aliyun

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
    paths:
      - 'config.yaml'
      - 'custom_sync.yaml'
      - '.github/workflows/sync-images.yml'

env:
  HUB_USERNAME: ${{ secrets.ALIYUN_USERNAME }}
  HUB_PASSWORD: ${{ secrets.ALIYUN_PASSWORD }}
  HUB_REGISTRY: registry.cn-hangzhou.aliyuncs.com
  REPO_NAMESPACE: ctrimg

jobs:
  generate-config:
    name: Generate Sync Configuration
    runs-on: ubuntu-latest
    outputs:
      has-sync-content: ${{ steps.check-content.outputs.has-sync-content }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyyaml requests

    - name: Generate sync configuration
      run: python gen_sync_yaml_new.py

    - name: Check if sync content exists
      id: check-content
      run: |
        if [ -f "sync.yaml" ] && [ -s "sync.yaml" ]; then
          echo "has-sync-content=true" >> $GITHUB_OUTPUT
        elif [ -f "custom_sync.yaml" ] && [ -s "custom_sync.yaml" ]; then
          echo "has-sync-content=true" >> $GITHUB_OUTPUT
        else
          echo "has-sync-content=false" >> $GITHUB_OUTPUT
        fi

    - name: Upload generated configs
      uses: actions/upload-artifact@v4
      with:
        name: sync-configs
        path: |
          sync.yaml
          custom_sync.yaml

  sync-images:
    name: Sync Images
    needs: generate-config
    if: needs.generate-config.outputs.has-sync-content == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config-file: [sync.yaml, custom_sync.yaml]
    timeout-minutes: 180

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download configs
      uses: actions/download-artifact@v4
      with:
        name: sync-configs

    - name: Install skopeo
      run: |
        sudo apt-get update
        sudo apt-get install -y skopeo

    - name: Login to Aliyun Registry
      run: |
        skopeo login -u "$HUB_USERNAME" -p "$HUB_PASSWORD" "$HUB_REGISTRY"

    - name: Sync images from ${{ matrix.config-file }}
      run: |
        if [ -f "${{ matrix.config-file }}" ] && [ -s "${{ matrix.config-file }}" ]; then
          echo "开始同步 ${{ matrix.config-file }} 中的镜像..."
          skopeo --insecure-policy sync -a --src yaml --dest docker \
            "${{ matrix.config-file }}" "$HUB_REGISTRY/$REPO_NAMESPACE"
          echo "✅ ${{ matrix.config-file }} 同步完成"
        else
          echo "⚠️  ${{ matrix.config-file }} 为空或不存在，跳过同步"
        fi

    - name: Verify sync results
      run: |
        echo "同步任务完成"
        if [ -f "${{ matrix.config-file }}" ]; then
          echo "配置文件内容摘要:"
          head -n 20 "${{ matrix.config-file }}"
        fi

  notify:
    name: Notify Result
    needs: [generate-config, sync-images]
    if: always()
    runs-on: ubuntu-latest
    
    steps:
    - name: Send notification
      run: |
        echo "同步任务状态:"
        echo "生成配置: ${{ needs.generate-config.result }}"
        echo "同步镜像: ${{ needs.sync-images.result }}"
        
        # 这里可以添加实际的通知逻辑
        # 例如: curl -X POST -d "status=completed" $WEBHOOK_URL